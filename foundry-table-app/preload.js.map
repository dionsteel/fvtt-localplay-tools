{"version":3,"file":"preload.js","sources":["../src/foundry-table-app/lib/utils.ts","../node_modules/express/index.js","../src/foundry-table-app/preload.ts"],"sourcesContent":["\nexport function isGameInitialised(game: {} | Game): game is Game {\n  return typeof (game as Game).loading === \"boolean\";\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n","import { isGameInitialised } from \"./lib/utils\";\r\nimport * as express from \"express\";\r\nconst app = express();\r\napp.get(\"**\", (req, res) => {\r\n  if (isGameInitialised(game)) {\r\n    res.send(`${game.users.players.map((p) => p.name)}`);\r\n  }\r\n});\r\napp.listen(3000);\r\nconsole.log(\"preload script\", !!game, !!Hooks);\r\n// console.log('document', document,window);\r\n// const repl=require('repl');\r\n// const cns=repl.start({useGlobal:true});\r\n// cns.context.stuff = {window,document};\r\n// console.log(cns);\r\n// document.onload = function(event){console.log('alt document load listener');}\r\n// global.getPreloadStatus=function() { return 'worked?'; }\r\n// document.addEventListener('load', (e) => console.log('load event', e));\r\ndocument.addEventListener(\"DOMContentLoaded\", (e) => mount());\r\nconst gmlogin = true;\r\n\r\nasync function mount() {\r\n  console.log(\"DOMCONTENTLOADED. check for foundry\");\r\n  // console.log(window.Hooks, window);\r\n  Hooks.on(\"init\", (_args) => {\r\n    console.log(\"preload script mounted foundry. \", window, global);\r\n    if (isGameInitialised(game) && game.users.apps[0]) {\r\n      if (\r\n        game.users.apps.length == 1 &&\r\n        game.users.apps[0] instanceof FormApplication\r\n      ) {\r\n        let loginApp = game.users.apps[0];\r\n        if (gmlogin) {\r\n          (loginApp.form as any).userid.selectedIndex = 1;\r\n          (loginApp.form as any).password.value = \"G0ndolin1!\";\r\n        } else {\r\n          const userlist = (\r\n            (loginApp.form as HTMLFormElement).userid as HTMLSelectElement\r\n          ).options;\r\n          if (userlist.namedItem(\"MapTable\")) {\r\n            userlist.namedItem(\"MapTable\").selected = true;\r\n          } else {\r\n            let ulen = userlist.length;\r\n            for (let i = 0; i < ulen; i++) {\r\n              let o = userlist.item(i);\r\n              if (/maptable/i.test(o.text)) {\r\n                o.selected = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        (loginApp.form as HTMLFormElement).requestSubmit();\r\n      }\r\n    }\r\n  });\r\n}\r\n"],"names":[],"mappings":"AACM,SAAU,iBAAiB,CAAC,IAAe,EAAA;AAC/C,IAAA,OAAO,OAAQ,IAAa,CAAC,OAAO,KAAK,SAAS,CAAC;AACrD;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC;;;;;;ACRzC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,KAAI;AACzB,IAAA,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE;QAC3B,GAAG,CAAC,IAAI,CAAC,CAAA,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAE,CAAA,CAAC,CAAC;AACtD,KAAA;AACH,CAAC,CAAC,CAAC;AACH,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC;AAG9D,eAAe,KAAK,GAAA;AAClB,IAAA,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;;IAEnD,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,KAAI;QACzB,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAChE,QAAA,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YACjD,IACE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,eAAe,EAC7C;gBACA,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC,gBAAa;oBACV,QAAQ,CAAC,IAAY,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC;oBAC/C,QAAQ,CAAC,IAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,YAAY,CAAC;AACtD,iBAeA;AACA,gBAAA,QAAQ,CAAC,IAAwB,CAAC,aAAa,EAAE,CAAC;AACpD,aAAA;AACF,SAAA;AACH,KAAC,CAAC,CAAC;AACL","x_google_ignoreList":[1]}
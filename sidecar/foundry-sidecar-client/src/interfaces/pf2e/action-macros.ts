import { ImageFilePath, ItemUUID } from "@/lib/utils";
import { ActionItemSource } from "./item/action";
import { i18n, config } from "./lang/all";
import { RawPredicate } from "./system/predication";
// import { RollOptionConfig } from "./system/statistic";

export interface RollOptionConfig {}
export interface ActionNote {
  outcome: string[];
  text: string;
  selector?: string;
  title?: string;
}

export interface ActionMacroModifier {
  label: string; // config.PF2E.Actions.CreateForgery.UnspecificHandwriting;
  modifier: number; //4;
  predicate: RawPredicate; //["action:create-forgery:unspecific-handwriting"];
  type?: "circumstance" | "item";
}

export interface ActionMacroDescription {
  name: string;
  title?: string;
  description?: string;
  img?: ImageFilePath;
  effect?: ItemUUID;
  cost?: number | "free" | "reaction";
  legacy?: true;
  slug: string;
  traits: string[];
  modifiers?: ActionMacroModifier[];
  difficultyClass?: string | { value: number };
  notes?: ActionNote[];
  rollOptions?: string[];
  statistic?: string;
  glyph: string;
  variants?: ActionMacroVariant[];
}
export type ActionMacroVariant = Omit<ActionMacroDescription, "variants">;

export const ActionMacros: Record<string, ActionMacroDescription> = {
  "administer-first-aid": {
    cost: 2,
    description: config.PF2E.Actions.AdministerFirstAid.Description,
    name: config.PF2E.Actions.AdministerFirstAid.Title,
    slug: "administer-first-aid",
    traits: ["manipulate"],
    modifiers: [],
    notes: [],
    rollOptions: [],
    statistic: "medicine",
    glyph: "D",
    variants: [
      {
        name: config.PF2E.Actions.AdministerFirstAid.Stabilize.Title,
        cost: 2,
        description: config.PF2E.Actions.AdministerFirstAid.Stabilize.Description,
        glyph: "D",
        modifiers: [],
        notes: [
          { outcome: ["criticalSuccess", "success"], text: config.PF2E.Actions.AdministerFirstAid.Stabilize.Notes.success, selector: "" },
          { outcome: ["criticalFailure"], text: config.PF2E.Actions.AdministerFirstAid.Stabilize.Notes.criticalFailure, selector: "" },
        ],
        rollOptions: [],
        slug: "stabilize",
        statistic: "medicine",
        traits: ["manipulate"],
      },
      {
        name: config.PF2E.Actions.AdministerFirstAid.StopBleeding.Title,
        cost: 2,
        description: config.PF2E.Actions.AdministerFirstAid.StopBleeding.Description,
        glyph: "D",
        modifiers: [],
        notes: [
          { outcome: ["criticalSuccess", "success"], text: config.PF2E.Actions.AdministerFirstAid.StopBleeding.Notes.success, selector: "" },
          { outcome: ["criticalFailure"], text: config.PF2E.Actions.AdministerFirstAid.StopBleeding.Notes.criticalFailure, selector: "" },
        ],
        rollOptions: [],
        slug: "stop-bleeding",
        statistic: "medicine",
        traits: ["manipulate"],
      },
    ],
  },
  aid: {
    cost: "reaction",
    description: config.PF2E.Actions.Aid.Description,
    name: config.PF2E.Actions.Aid.Title,
    slug: "aid",
    traits: [],
    difficultyClass: { value: 20 },
    modifiers: [],
    notes: [
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Aid.Notes.criticalFailure, title: config.PF2E.Check.Result.Degree.Check.criticalFailure, selector: "" },
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Aid.Notes.criticalSuccess, title: config.PF2E.Check.Result.Degree.Check.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.Aid.Notes.success, title: config.PF2E.Check.Result.Degree.Check.success, selector: "" },
    ],
    rollOptions: ["action:aid"],
    statistic: "",
    glyph: "R",
    variants: [],
  },
  "avoid-notice": {
    description: config.PF2E.Actions.AvoidNotice.Description,
    name: config.PF2E.Actions.AvoidNotice.Title,
    slug: "avoid-notice",
    traits: ["exploration"],
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.AvoidNotice.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.AvoidNotice.Notes.success, selector: "" },
    ],
    rollOptions: ["action:avoid-notice"],
    statistic: "stealth",
    glyph: "",
    variants: [],
  },
  balance: {
    cost: 1,
    description: config.PF2E.Actions.Balance.Description,
    name: config.PF2E.Actions.Balance.Title,
    slug: "balance",
    traits: ["move"],
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Balance.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.Balance.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.Balance.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Balance.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:balance"],
    statistic: "acrobatics",
    glyph: "A",
    variants: [],
  },
  coerce: {
    description: config.PF2E.Actions.Coerce.Description,
    name: config.PF2E.Actions.Coerce.Title,
    slug: "coerce",
    traits: ["auditory", "concentrate", "emotion", "exploration", "linguistic", "mental"],
    difficultyClass: "will",
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Coerce.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.Coerce.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.Coerce.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Coerce.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:coerce"],
    statistic: "intimidation",
    glyph: "",
    variants: [],
  },
  "command-an-animal": {
    cost: 1,
    description: config.PF2E.Actions.CommandAnAnimal.Description,
    name: config.PF2E.Actions.CommandAnAnimal.Title,
    slug: "command-an-animal",
    traits: ["auditory", "concentrate"],
    difficultyClass: "will",
    modifiers: [],
    notes: [
      { outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.CommandAnAnimal.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.CommandAnAnimal.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.CommandAnAnimal.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:command-an-animal"],
    statistic: "nature",
    glyph: "A",
    variants: [],
  },
  "conceal-an-object": {
    cost: 1,
    description: config.PF2E.Actions.ConcealAnObject.Description,
    name: config.PF2E.Actions.ConcealAnObject.Title,
    slug: "conceal-an-object",
    traits: ["manipulate", "secret"],
    difficultyClass: "perception",
    modifiers: [],
    notes: [
      { outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.ConcealAnObject.Notes.success, selector: "" },
      { outcome: ["failure", "criticalFailure"], text: config.PF2E.Actions.ConcealAnObject.Notes.failure, selector: "" },
    ],
    rollOptions: ["action:conceal-an-object"],
    statistic: "stealth",
    glyph: "A",
    variants: [],
  },
  crawl: { cost: 1, description: config.PF2E.Actions.Crawl.Description, name: config.PF2E.Actions.Crawl.Title, slug: "crawl", traits: ["move"], glyph: "A", variants: [] },
  "create-forgery": {
    description: config.PF2E.Actions.CreateForgery.Description,
    name: config.PF2E.Actions.CreateForgery.Title,
    slug: "create-forgery",
    traits: ["downtime", "secret"],
    difficultyClass: { value: 20 },
    modifiers: [{ label: config.PF2E.Actions.CreateForgery.UnspecificHandwriting, modifier: 4, predicate: ["action:create-forgery:unspecific-handwriting"], type: "circumstance" }],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.CreateForgery.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.CreateForgery.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.CreateForgery.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.CreateForgery.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:create-forgery"],
    statistic: "society",
    glyph: "",
    variants: [],
  },
  "decipher-writing": {
    description: config.PF2E.Actions.DecipherWriting.Description,
    name: config.PF2E.Actions.DecipherWriting.Title,
    slug: "decipher-writing",
    traits: ["concentrate", "exploration", "secret"],
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.DecipherWriting.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.DecipherWriting.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.DecipherWriting.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.DecipherWriting.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:decipher-writing"],
    statistic: "",
    glyph: "",
    variants: [],
  },
  delay: { cost: "free", description: config.PF2E.Actions.Delay.Description, name: config.PF2E.Actions.Delay.Title, slug: "delay", traits: [], glyph: "F", variants: [] },
  demoralize: {
    description: config.PF2E.Actions.Demoralize.Description,
    name: config.PF2E.Actions.Demoralize.Title,
    slug: "demoralize",
    traits: ["auditory", "concentrate", "emotion", "fear", "mental"],
    difficultyClass: "will",
    modifiers: [{ label: config.PF2E.Actions.Demoralize.Unintelligible, modifier: -4, predicate: ["action:demoralize:unintelligible"], type: "circumstance" }],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Demoralize.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.Demoralize.Notes.success, selector: "" },
    ],
    rollOptions: ["action:demoralize"],
    statistic: "intimidation",
    glyph: "",
    variants: [],
  },
  "disable-device": {
    cost: 2,
    description: config.PF2E.Actions.DisableDevice.Description,
    name: config.PF2E.Actions.DisableDevice.Title,
    slug: "disable-device",
    traits: ["manipulate"],
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.DisableDevice.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.DisableDevice.Notes.success, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.DisableDevice.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:disable-a-device", "action:disable-device"],
    statistic: "thievery",
    glyph: "D",
    variants: [],
  },
  "drop-prone": {
    cost: 1,
    description: config.PF2E.Actions.DropProne.Description,
    name: config.PF2E.Actions.DropProne.Title,
    slug: "drop-prone",
    traits: ["move"],
    glyph: "A",
    variants: [],
  },
  escape: {
    cost: 1,
    description: config.PF2E.Actions.Escape.Description,
    name: config.PF2E.Actions.Escape.Title,
    slug: "escape",
    traits: ["attack"],
    difficultyClass: "athletics",
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Escape.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.Escape.Notes.success, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Escape.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:escape"],
    statistic: "unarmed",
    glyph: "A",
    variants: [],
  },
  hide: {
    cost: 1,
    description: config.PF2E.Actions.Hide.Description,
    name: config.PF2E.Actions.Hide.Title,
    slug: "hide",
    traits: ["secret"],
    difficultyClass: "perception",
    modifiers: [],
    notes: [{ outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.Hide.Notes.success, selector: "" }],
    rollOptions: ["action:hide"],
    statistic: "stealth",
    glyph: "A",
    variants: [],
  },
  interact: {
    cost: 1,
    description: config.PF2E.Actions.Interact.Description,
    name: config.PF2E.Actions.Interact.Title,
    slug: "interact",
    traits: ["manipulate"],
    glyph: "A",
    variants: [],
  },
  leap: { cost: 1, description: config.PF2E.Actions.Leap.Description, name: config.PF2E.Actions.Leap.Title, slug: "leap", traits: ["move"], glyph: "A", variants: [] },
  "maneuver-in-flight": {
    cost: 1,
    description: config.PF2E.Actions.ManeuverInFlight.Description,
    name: config.PF2E.Actions.ManeuverInFlight.Title,
    slug: "maneuver-in-flight",
    traits: ["move"],
    modifiers: [],
    notes: [
      { outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.ManeuverInFlight.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.ManeuverInFlight.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.ManeuverInFlight.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:maneuver-in-flight"],
    statistic: "acrobatics",
    glyph: "A",
    variants: [],
  },
  "palm-an-object": {
    cost: 1,
    description: config.PF2E.Actions.PalmAnObject.Description,
    name: config.PF2E.Actions.PalmAnObject.Title,
    slug: "palm-an-object",
    traits: ["manipulate"],
    difficultyClass: "perception",
    modifiers: [],
    notes: [
      { outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.PalmAnObject.Notes.success, selector: "" },
      { outcome: ["failure", "criticalFailure"], text: config.PF2E.Actions.PalmAnObject.Notes.failure, selector: "" },
    ],
    rollOptions: ["action:palm-an-object"],
    statistic: "thievery",
    glyph: "A",
    variants: [],
  },
  "pick-a-lock": {
    cost: 2,
    description: config.PF2E.Actions.PickALock.Description,
    name: config.PF2E.Actions.PickALock.Title,
    slug: "pick-a-lock",
    traits: ["manipulate"],
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.PickALock.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.PickALock.Notes.success, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.PickALock.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:pick-a-lock"],
    statistic: "thievery",
    glyph: "D",
    variants: [],
  },
  ready: { cost: 2, description: config.PF2E.Actions.Ready.Description, name: config.PF2E.Actions.Ready.Title, slug: "ready", traits: ["concentrate"], glyph: "D", variants: [] },
  release: {
    cost: "free",
    description: config.PF2E.Actions.Release.Description,
    name: config.PF2E.Actions.Release.Title,
    slug: "release",
    traits: ["manipulate"],
    glyph: "F",
    variants: [],
  },
  seek: {
    cost: 1,
    description: config.PF2E.Actions.Seek.Description,
    name: config.PF2E.Actions.Seek.Title,
    slug: "seek",
    traits: ["concentrate", "secret"],
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Seek.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.Seek.Notes.success, selector: "" },
    ],
    rollOptions: ["action:seek"],
    statistic: "perception",
    glyph: "A",
    variants: [],
  },
  "sense-direction": {
    description: config.PF2E.Actions.SenseDirection.Description,
    name: config.PF2E.Actions.SenseDirection.Title,
    slug: "sense-direction",
    traits: ["exploration", "secret"],
    modifiers: [{ label: config.PF2E.Actions.SenseDirection.Modifier.NoCompass, modifier: -2, predicate: [{ not: "compass-in-possession" }], type: "item" }],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.SenseDirection.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.SenseDirection.Notes.success, selector: "" },
    ],
    rollOptions: ["action:sense-direction"],
    statistic: "survival",
    glyph: "",
    variants: [],
  },
  "sense-motive": {
    cost: 1,
    description: config.PF2E.Actions.SenseMotive.Description,
    name: config.PF2E.Actions.SenseMotive.Title,
    slug: "sense-motive",
    traits: ["concentrate", "secret"],
    difficultyClass: "deception",
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.SenseMotive.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.SenseMotive.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.SenseMotive.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.SenseMotive.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:sense-motive"],
    statistic: "perception",
    glyph: "A",
    variants: [],
  },
  sneak: {
    cost: 1,
    description: config.PF2E.Actions.Sneak.Description,
    name: config.PF2E.Actions.Sneak.Title,
    slug: "sneak",
    traits: ["move", "secret"],
    difficultyClass: "perception",
    modifiers: [],
    notes: [
      { outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.Sneak.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.Sneak.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Sneak.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:sneak"],
    statistic: "stealth",
    glyph: "A",
    variants: [],
  },
  squeeze: {
    description: config.PF2E.Actions.Squeeze.Description,
    name: config.PF2E.Actions.Squeeze.Title,
    slug: "squeeze",
    traits: ["exploration", "move"],
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Squeeze.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.Squeeze.Notes.success, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Squeeze.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:squeeze"],
    statistic: "acrobatics",
    glyph: "",
    variants: [],
  },
  stand: { cost: 1, description: config.PF2E.Actions.Stand.Description, name: config.PF2E.Actions.Stand.Title, slug: "stand", traits: ["move"], glyph: "A", variants: [] },
  steal: {
    cost: 1,
    description: config.PF2E.Actions.Steal.Description,
    name: config.PF2E.Actions.Steal.Title,
    slug: "steal",
    traits: ["manipulate"],
    difficultyClass: "perception",
    modifiers: [{ label: config.PF2E.Actions.Steal.Pocketed, modifier: -5, predicate: ["action:steal:pocketed"] }],
    notes: [
      { outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.Steal.Notes.success, selector: "" },
      { outcome: ["failure", "criticalFailure"], text: config.PF2E.Actions.Steal.Notes.failure, selector: "" },
    ],
    rollOptions: ["action:steal"],
    statistic: "thievery",
    glyph: "A",
    variants: [],
  },
  step: { cost: 1, description: config.PF2E.Actions.Step.Description, name: config.PF2E.Actions.Step.Title, slug: "step", traits: ["move"], glyph: "A", variants: [] },
  stride: { cost: 1, description: config.PF2E.Actions.Stride.Description, name: config.PF2E.Actions.Stride.Title, slug: "stride", traits: ["move"], glyph: "A", variants: [] },
  subsist: {
    description: config.PF2E.Actions.Subsist.Description,
    name: config.PF2E.Actions.Subsist.Title,
    slug: "subsist",
    traits: ["downtime"],
    modifiers: [{ label: config.PF2E.Actions.Subsist.AfterExplorationPenalty, modifier: -5, predicate: ["action:subsist:after-exploration"] }],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Subsist.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.Subsist.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.Subsist.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Subsist.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:subsist"],
    statistic: "",
    glyph: "",
    variants: [],
  },
  "take-cover": {
    cost: 1,
    description: config.PF2E.Actions.TakeCover.Description,
    img: "systems/pf2e/icons/conditions-2/status_acup.webp",
    name: config.PF2E.Actions.TakeCover.Title,
    slug: "take-cover",
    traits: [],
    effect: "Compendium.pf2e.other-effects.I9lfZUiCwMiGogVi",
    glyph: "A",
    variants: [],
  },
  track: {
    description: config.PF2E.Actions.Track.Description,
    name: config.PF2E.Actions.Track.Title,
    slug: "track",
    traits: ["concentrate", "exploration", "move"],
    modifiers: [],
    notes: [
      { outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.Track.Notes.success, selector: "" },
      { outcome: ["failure"], text: config.PF2E.Actions.Track.Notes.failure, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Track.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:track"],
    statistic: "survival",
    glyph: "",
    variants: [],
  },
  "treat-disease": {
    description: config.PF2E.Actions.TreatDisease.Description,
    name: config.PF2E.Actions.TreatDisease.Title,
    slug: "treat-disease",
    traits: ["downtime", "manipulate"],
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.TreatDisease.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.TreatDisease.Notes.success, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.TreatDisease.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:treat-disease"],
    statistic: "medicine",
    glyph: "",
    variants: [],
  },
  "treat-poison": {
    cost: 1,
    description: config.PF2E.Actions.TreatPoison.Description,
    name: config.PF2E.Actions.TreatPoison.Title,
    slug: "treat-poison",
    traits: ["manipulate"],
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.TreatPoison.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.TreatPoison.Notes.success, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.TreatPoison.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:treat-poison"],
    statistic: "medicine",
    glyph: "A",
    variants: [],
  },
  trip: {
    cost: 1,
    description: config.PF2E.Actions.Trip.Description,
    name: config.PF2E.Actions.Trip.Title,
    slug: "trip",
    traits: ["attack"],
    difficultyClass: "reflex",
    modifiers: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Trip.Notes.criticalSuccess, selector: "" },
      { outcome: ["success"], text: config.PF2E.Actions.Trip.Notes.success, selector: "" },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Trip.Notes.criticalFailure, selector: "" },
    ],
    rollOptions: ["action:trip"],
    statistic: "athletics",
    glyph: "A",
    variants: [],
  },
  "tumble-through": {
    cost: 1,
    description: config.PF2E.Actions.TumbleThrough.Description,
    name: config.PF2E.Actions.TumbleThrough.Title,
    slug: "tumble-through",
    traits: ["move"],
    difficultyClass: "reflex",
    modifiers: [],
    notes: [
      { outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.TumbleThrough.Notes.success, selector: "" },
      { outcome: ["failure", "criticalFailure"], text: config.PF2E.Actions.TumbleThrough.Notes.failure, selector: "" },
    ],
    rollOptions: ["action:tumble-through"],
    statistic: "acrobatics",
    glyph: "A",
    variants: [],
  },

  // Basic Interaction

  // Basic Movement

  // Ancestry
  "arcane-slam": {
    legacy: true,
    slug: "arcaneSlam",
    glyph: "D",
    title: config.PF2E.Actions.ArcaneSlam.Title,
    name: config.PF2E.Actions.ArcaneSlam.Title,
    // description: config.PF2E.Actions.ArcaneSlam.Title,
    traits: ["automaton"],
    notes: [
      { outcome: ["critical-Success"], text: config.PF2E.Actions.ArcaneSlam.Notes.criticalSuccess },
      { outcome: ["success"], text: config.PF2E.Actions.ArcaneSlam.Notes.success },
      { outcome: ["failure"], text: config.PF2E.Actions.ArcaneSlam.Notes.failure },
      { outcome: ["critical-Failure"], text: config.PF2E.Actions.ArcaneSlam.Notes.criticalFailure },
      { outcome: ["No-Target"], text: config.PF2E.Actions.ArcaneSlam.Notes.NoTarget },
    ],
    variants: [],
  },

  // Class
  tamper: {
    slug: "tamper",
    glyph: "A",
    title: config.PF2E.Actions.Tamper.Title,
    name: config.PF2E.Actions.Tamper.Title,
    traits: ["inventor", "manipulate"],
    difficultyClass: "reflex",
    notes: [
      { outcome: ["critical-Success"], text: config.PF2E.Actions.Tamper.Notes.criticalSuccess },
      { outcome: ["success"], text: config.PF2E.Actions.Tamper.Notes.success },
      { outcome: ["critical-Failure"], text: config.PF2E.Actions.Tamper.Notes.criticalFailure },
    ],
  },

  // Athletics
  climb: {
    legacy: true,
    slug: "climb",
    statistic: "athletics",
    name: "climb",
    title: config.PF2E.Actions.Climb.Title,
    notes: Object.entries(config.PF2E.Actions.Climb.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },
  disarm: {
    legacy: true,
    slug: "disarm",
    name: "disarm",
    statistic: "athletics",
    title: config.PF2E.Actions.Disarm.Title,
    notes: Object.entries(config.PF2E.Actions.Disarm.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },
  "force-open": {
    legacy: true,
    slug: "forceOpen",
    statistic: "athletics",
    name: "forceOpen",
    title: config.PF2E.Actions.ForceOpen.Title,
    notes: Object.entries(config.PF2E.Actions.ForceOpen.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },
  grapple: {
    legacy: true,
    slug: "grapple",
    statistic: "athletics",
    name: "grapple",
    title: config.PF2E.Actions.Grapple.Title,
    notes: Object.entries(config.PF2E.Actions.Grapple.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },
  "high-jump": {
    legacy: true,
    slug: "highJump",
    statistic: "athletics",
    name: "highJump",
    title: config.PF2E.Actions.HighJump.Title,
    notes: Object.entries(config.PF2E.Actions.HighJump.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },
  "long-jump": {
    legacy: true,
    slug: "longJump",
    statistic: "athletics",
    name: "longJump",
    title: config.PF2E.Actions.LongJump.Title,
    notes: Object.entries(config.PF2E.Actions.LongJump.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },
  shove: {
    legacy: true,
    slug: "shove",
    statistic: "athletics",
    name: "shove",
    title: config.PF2E.Actions.Shove.Title,
    notes: Object.entries(config.PF2E.Actions.Shove.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },
  swim: {
    legacy: true,
    slug: "swim",
    statistic: "athletics",
    name: "swim",
    title: config.PF2E.Actions.Swim.Title,
    notes: Object.entries(config.PF2E.Actions.Swim.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },
  "whirling-throw": {
    legacy: true,
    slug: "whirlingThrow",
    statistic: "athletics",
    name: "whirlingThrow",
    title: config.PF2E.Actions.WhirlingThrow.Title,
    notes: Object.entries(config.PF2E.Actions.WhirlingThrow.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },

  // Crafting
  craft: {
    legacy: true,
    slug: "craft",
    statistic: "crafting",
    name: "craft",
    title: config.PF2E.Actions.Craft.Title,
    notes: Object.entries(config.PF2E.Actions.Craft.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },
  repair: {
    legacy: true,
    statistic: "crafting",
    slug: "repair",
    name: "repair",
    title: config.PF2E.Actions.Repair.Title,
    notes: Object.entries(config.PF2E.Actions.Repair.Notes).map(([k, v]) => ({ outcome: [k], text: v })),
    traits: [],
    glyph: "",
  },

  // Deception
  "create-a-diversion": {
    legacy: true,
    slug: "createADiversion",
    name: config.PF2E.Actions.CreateADiversion.Title,
    glyph: "",
    statistic: "deception",
    traits: [],
    notes: [
      { outcome: ["failure", "criticalFailure"], text: config.PF2E.Actions.CreateADiversion.Notes.failure },
      { outcome: ["success", "criticalSuccess"], text: config.PF2E.Actions.CreateADiversion.Notes.success },
    ],
    variants: [
      { slug: "distracting-words", name: config.PF2E.Actions.CreateADiversion.DistractingWords.Title, glyph: "", traits: [] },
      { slug: "gesture", name: config.PF2E.Actions.CreateADiversion.Gesture.Title, glyph: "", traits: [] },
      { slug: "trick", name: config.PF2E.Actions.CreateADiversion.Trick.Title, glyph: "", traits: [] },
    ],
  },

  feint: {
    legacy: true,
    slug: "feint",
    statistic: "deception",
    name: config.PF2E.Actions.Feint.Title,
    title: config.PF2E.Actions.Feint.Title,
    variants: [],
    glyph: "",
    traits: ["deception"],
  },

  impersonate: {
    legacy: true,
    slug: "impersonate",
    name: config.PF2E.Actions.Impersonate.Title,
    title: config.PF2E.Actions.Impersonate.Title,
    variants: [],
    statistic: "deception",
    glyph: "",
    traits: ["deception", "secret"],
  },
  lie: {
    legacy: true,
    slug: "lie",
    name: config.PF2E.Actions.Lie.Title,
    title: config.PF2E.Actions.Lie.Title,
    variants: [],
    statistic: "deception",
    glyph: "",
    traits: [],
    notes: [
      { outcome: ["criticalSuccess", "success"], text: config.PF2E.Actions.Lie.Notes.success },
      { outcome: ["criticalFailure", "failure"], text: config.PF2E.Actions.Lie.Notes.failure },
    ],
  },

  // Diplomacy
  "bon-mot": {
    legacy: true,
    slug: "bon-mot",
    name: config.PF2E.Actions.BonMot.Title,
    title: config.PF2E.Actions.BonMot.Title,
    variants: [],
    statistic: "deception",
    glyph: "",
    traits: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.BonMot.Notes.criticalSuccess },
      { outcome: ["success"], text: config.PF2E.Actions.BonMot.Notes.success },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.BonMot.Notes.criticalFailure },
    ],
  },
  "gather-information": {
    legacy: true,
    slug: "gather-information",
    name: config.PF2E.Actions.GatherInformation.Title,
    title: config.PF2E.Actions.GatherInformation.Title,
    variants: [],
    statistic: "investigation",
    glyph: "",
    traits: [],
    notes: [
      { outcome: ["success"], text: config.PF2E.Actions.GatherInformation.Notes.success },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.GatherInformation.Notes.criticalFailure },
    ],
  },
  "make-an-impression": {
    legacy: true,
    slug: "make-an-impression",
    name: config.PF2E.Actions.MakeAnImpression.Title,
    title: config.PF2E.Actions.MakeAnImpression.Title,
    variants: [],
    statistic: "performance",
    glyph: "",
    traits: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.MakeAnImpression.Notes.criticalSuccess },
      { outcome: ["success"], text: config.PF2E.Actions.MakeAnImpression.Notes.success },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.MakeAnImpression.Notes.criticalFailure },
    ],
  },
  request: {
    legacy: true,
    slug: "request",
    name: config.PF2E.Actions.Request.Title,
    title: config.PF2E.Actions.Request.Title,
    statistic: "society",
    variants: [],
    glyph: "",
    traits: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Request.Notes.criticalSuccess },
      { outcome: ["success"], text: config.PF2E.Actions.Request.Notes.success },
      { outcome: ["failure"], text: config.PF2E.Actions.Request.Notes.failure },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Request.Notes.criticalFailure },
    ],
  },

  // Performance
  perform: {
    legacy: true,
    slug: "perform",
    name: config.PF2E.Actions.Perform.Title,
    title: config.PF2E.Actions.Perform.Title,
    glyph: "",
    traits: [],
    notes: [
      { outcome: ["criticalSuccess"], text: config.PF2E.Actions.Perform.Notes.criticalSuccess },
      { outcome: ["success"], text: config.PF2E.Actions.Perform.Notes.success },
      { outcome: ["failure"], text: config.PF2E.Actions.Perform.Notes.failure },
      { outcome: ["criticalFailure"], text: config.PF2E.Actions.Perform.Notes.criticalFailure },
    ],
    variants: [
      { slug: "acting", glyph: "", traits: [], name: config.PF2E.Actions.Perform.Acting.Title },
      { slug: "comedy", glyph: "", traits: [], name: config.PF2E.Actions.Perform.Comedy.Title },
      { slug: "dance", glyph: "", traits: [], name: config.PF2E.Actions.Perform.Dance.Title },
      { slug: "keyboards", glyph: "", traits: [], name: config.PF2E.Actions.Perform.Keyboards.Title },
      { slug: "oratory", glyph: "", traits: [], name: config.PF2E.Actions.Perform.Oratory.Title },
      { slug: "percussion", glyph: "", traits: [], name: config.PF2E.Actions.Perform.Percussion.Title },
      { slug: "singing", glyph: "", traits: [], name: config.PF2E.Actions.Perform.Singing.Title },
      { slug: "strings", glyph: "", traits: [], name: config.PF2E.Actions.Perform.Strings.Title },
      { slug: "winds", glyph: "", traits: [], name: config.PF2E.Actions.Perform.Winds.Title },
    ],
  },

  // Society

  // Stealth
};
